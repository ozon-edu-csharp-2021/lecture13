// <auto-generated />
using CSharpCourse.Lecture13.Demo.EFCore.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CSharpCourse.Lecture13.Demo.EFCoreMigrator.Migrations
{
    [DbContext(typeof(MessengerDbContext))]
    partial class MessengerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CSharpCourse.Lecture13.Demo.EFCore.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LogoUrl")
                        .HasColumnType("text")
                        .HasColumnName("logo_url");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("chats");
                });

            modelBuilder.Entity("CSharpCourse.Lecture13.Demo.EFCore.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ChatId")
                        .HasColumnType("integer")
                        .HasColumnName("chat_id");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean")
                        .HasColumnName("is_read");

                    b.Property<string>("Text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<int>("UserFrom")
                        .HasColumnType("integer")
                        .HasColumnName("user_from");

                    b.Property<int>("UserTo")
                        .HasColumnType("integer")
                        .HasColumnName("user_to");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("CSharpCourse.Lecture13.Demo.EFCore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text")
                        .HasColumnName("avatar_url");

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Nickname")
                        .HasColumnType("text")
                        .HasColumnName("nickname");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("CSharpCourse.Lecture13.Demo.EFCore.Models.UserChat", b =>
                {
                    b.Property<int>("ChatId")
                        .HasColumnType("integer")
                        .HasColumnName("chat_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("ChatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("users_chats");
                });

            modelBuilder.Entity("CSharpCourse.Lecture13.Demo.EFCore.Models.Message", b =>
                {
                    b.HasOne("CSharpCourse.Lecture13.Demo.EFCore.Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("CSharpCourse.Lecture13.Demo.EFCore.Models.UserChat", b =>
                {
                    b.HasOne("CSharpCourse.Lecture13.Demo.EFCore.Models.Chat", "Chat")
                        .WithMany("UsersChats")
                        .HasForeignKey("ChatId")
                        .HasConstraintName("chats_users_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSharpCourse.Lecture13.Demo.EFCore.Models.User", "User")
                        .WithMany("UsersChats")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_chats_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSharpCourse.Lecture13.Demo.EFCore.Models.Chat", b =>
                {
                    b.Navigation("UsersChats");
                });

            modelBuilder.Entity("CSharpCourse.Lecture13.Demo.EFCore.Models.User", b =>
                {
                    b.Navigation("UsersChats");
                });
#pragma warning restore 612, 618
        }
    }
}
